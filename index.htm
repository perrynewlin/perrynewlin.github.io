<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<link rel="icon" type="image/x-icon" href="img/favicon.ico" />
<meta name="description" content="Discover the portfolio of Perry Newlin.">
<meta name="keywords" content="Portfolio, Perry Newlin, Newlin, Perry, Skills, Projects, Web Development, LinkedIn, VHDL, FPGA, SystemVerilog, Vivado">
<meta name="author" content="Perry Newlin">
<meta name="robots" content="index, follow">
<link rel="canonical" href="https://perrynewlin.com">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta property="og:title" content="Perry Newlin - Portfolio">
<meta property="og:description" content="Simple portfolio of projects & skills - Perry Newlin.">
<meta property="og:image" content="img/perry_newlin_headshot.webp">
<meta property="og:url" content="https://perrynewlin.com">
<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:title" content="Perry Newlin - Portfolio">
<meta name="twitter:description" content="Discover the portfolio of Perry Newlin.">
<meta name="twitter:image" content="img/perry_newlin_headshot.webp">
<meta name="linkedin" content="Connect with Perry Newlin on LinkedIn at https://www.linkedin.com/in/perry-newlin/">
<title>Perry Newlin - Portfolio</title>
<style>
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
body {
  font-family: Georgia, "Times New Roman", Times, serif;
  background-color: #fff;
  color: #000;
  line-height: 1.6;
  margin: 0 auto;
  max-width: 1200px;
}
header, nav, main, footer {
  padding: 1em;
}
header {
  display: flex;
  flex-direction: column;
  border-bottom: 1px solid #ccc;
}
.top-nav {
  display: flex;
  justify-content: flex-end;
  gap: 1rem;
  margin-bottom: 1rem;
}
.top-nav a {
  text-decoration: none;
  color: #0645ad;
  font-weight: bold;
}
.title-area h1 {
  font-size: 2.2rem;
  margin-bottom: 0.5em;
}
.title-area h2 {
  font-size: 1.2rem;
  color: #666;
}
.content-wrapper {
  display: flex;
  flex-direction: row;
  gap: 1rem;
}
.main-content {
  flex: 3;
  min-width: 200px;
}
.infobox {
  flex: 1;
  min-width: 150px;
  border: 1px solid #a2a9b1;
  background: #f8f9fa;
  padding: 1em;
  align-self: flex-start;
}
.infobox h3 {
  text-align: center;
  margin-bottom: 1em;
}
.infobox img {
  display: block;
  max-width: 100%;
  height: auto;
  border: 1px solid #ccc;
  margin: 0 auto 1em;
}
.infobox p {
  font-size: 0.9rem;
  text-align: center;
  margin-bottom: 1em;
}
.infobox a {
  display: block;
  text-align: center;
  color: #0645ad;
  font-weight: bold;
  text-decoration: none;
}
.infobox a:hover {
  text-decoration: underline;
}
.main-content h2,
.main-content h3,
.main-content h4,
.main-content h5 {
  margin-top: 1em;
  color: #333;
}
ul {
  margin-top: 0.5em;
  margin-left: 1.2em;
  list-style-type: disc;
}
.gallery-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
  gap: 1em;
  margin-top: 1em;
}
.gallery-grid figure {
  border: 1px solid #ccc;
  padding: 0.5em;
  background-color: #fafafa;
  text-align: center;
}
.gallery-grid img {
  width: 100%;
  height: auto;
}
.gallery-grid figcaption {
  font-size: 0.9rem;
  color: #555;
  margin-top: 0.5em;
}
#blogList {
  display: none;
  margin-top: 2em;
}
@media (max-width: 768px) {
  .content-wrapper {
    flex-direction: column;
  }
  .infobox {
    order: -1;
  }
  .main-content {
    order: 1;
  }
}
footer {
  margin-top: 2em;
  border-top: 1px solid #ccc;
  font-size: 0.9rem;
  text-align: center;
}
.multi-column-list {
  columns: 2;
  -webkit-columns: 2;
  -moz-columns: 2;
  column-gap: 2em;
  list-style-type: disc;
  margin-left: 1.5em;
}
</style>
</head>
<body>
<header>
<div class="top-nav">
<a href="#" id="homeLink">Home</a>
<a href="#" id="blogLink">Extras</a>
</div>
<div class="title-area">
<h1>Perry Newlin</h1>
<h2>Portfolio</h2>
</div>
</header>
<main>
<div id="portfolioPage">
<div class="content-wrapper">
<div class="main-content">
<h2>About Perry Newlin</h2>


<p>
I’m a Junior at the <a href="https://msoe.edu" target="_blank" rel="noopener">Milwaukee School of Engineering</a> pursuing a bachelor’s in computer engineering. With over 10 years of hobbyist experience with RTL and hardware development - my passion for computers and hardware started early at just 10 years old. I’ve developed custom software/hardware solutions that have been deployed across the country through previous internship experience and I’m eager to continue applying my passion, skill, knowledge and love for the field of computer engineering to create more innovative and elegant solutions.  
</p>


<h3>Skills</h3>
<ul class="multi-column-list">
  <li>Python (Tkinter, PyQt, matplotlib, tensorflow, pytorch, transformers, pandas, pyserial, Qiskit, Flask)</li>
  <li>VHDL</li>
  <li>Verilog/SystemVerilog</li>
  <li>C</li>
  <li>C++</li>
  <li>Java</li>
  <li>Kotlin</li>
  <li>JavaScript</li>
  <li>HTML/CSS</li>
  <li>Bash</li>
  <li>TCL (Tcl/Tk)</li>
  <li>Perl</li>
  <li>Git</li>
  <li>Jenkins</li>
  <li>AXI4, AXI4-Lite</li>
  <li>Quartus, Modelsim, Vivado, Vitis HLS</li>
  <li>RISC-V, ARM, Microblaze</li>
  <li>UVM, CocoTB, PyUVM</li>
  <li>MATLAB, Simulink, Speedgoat HIL</li>
  <li>I2C, SPI, Serial, MII</li>
  <li>Logic Analyzers, JTAG, PLL, DLL</li>
  <li>NI Multisim</li>
  <li>Digital Signal Processing</li>
  <li>Superscalar and Parallel Architectures</li>
  <li>PCB Design (EasyEDA, JLCPCB)</li>
  <li>Jupyter Notebook</li>
  <li>MS Office, Excel</li>
</ul>

<h3>Websites</h3>
<ul>
<li><strong><a href="https://www.easytrig.com" target="_blank" rel="noopener">easytrig.com</a> </strong> Free and Easy Engineering Calculators.</li>
<li><strong><a href="https://www.wrelks.com" target="_blank" rel="noopener">wrelks.com</a> </strong> Blog website, <a href="https://www.wrelks.com/resources/">resource collection</a> for Qiskit/QuantumComputing, <a href="https://www.wrelks.com/quirk">Quantum circuit sim w/ math</a></li>
<li><strong><a href="https://www.relks.org" target="_blank" rel="noopener">relks.org</a> </strong> Artificial Intelligence that survives in space.</li>
<li><strong><a href="https://www.perrynewlin.com" target="_blank" rel="noopener">perrynewlin.com</a> </strong> <b><i>(Here!)</i></b> minimalist portfolio website.</b></i></li>
<li><strong><a href="https://www.theoneduck.com" target="_blank" rel="noopener">theoneduck.com</a> </strong> Software solutions for the everyday user, no subscriptions just elegant working stuff.</li>
</ul>




<h3>Certifications</h3>
<ul>

<li><strong>Quantum Algorithms for Cybersecurity, Chemistry, and Optimization</strong>
<em><p>Institution: </em>Massachusetts Institute of Technology
<em><a alt="Link to my Quantum Algorithms for Cybersecurity, Chemistry, and Optimization Certificate." href="https://xpro.mit.edu/certificate/67dbec10-2228-4ad1-a59b-1d9e85a5e8f9/"><p>Link to Certification.</a></em>
</li>

<li><strong>Introduction to Quantum Computing</strong>
<em><p>Institution: </em>Massachusetts Institute of Technology
<em><a alt="Link to my Introduction to Quantum Computing Certificate." href="https://xpro.mit.edu/certificate/fa9f3dce-b51b-4c04-8e10-75f84053b83f/"><p>Link to Certification.</a></em>
</li>

<li><strong>Certificate of Quantum Excellence</strong>
<em><p>Institution: </em>IBM Quantum
<em><a alt="Link to my Certificate of Quantum Excellence Certificate." href="https://drive.google.com/file/d/1yyzVe8I_SxL--1Shuun3eKA5M6iqwziR/view"><p>Link to Certification.</a></em>
</li>

<li><strong>Introduction to Quantum Computing Course</strong>
<em><p>Institution: </em>IBM Quantum
<em><a alt="Link to my Introduction to Quantum Computing Certificate." href="https://drive.google.com/file/d/1jPgXi02wx9xFOMtk0chG1W-B489BcLuk/view"><p>Link to Certification.</a></em>
</li>

<li><strong>Arduino Fundamentals | Electronics and Physical Computing</strong>
<em><p>Institution: </em>Arduino
<em><a alt="Link to my Arduino Fundamentals Certificate." href="https://certifications-assets-cf.arduino.cc/certificates/daa6c36f-aa9d-4de9-9840-2052adfa7e0f.pdf"><p>Link to Certification.</a></em>
</li>





</ul>
<h3>Projects</h3>
<ul>

<li><strong>CSMA/CD Networking Protocol Implemented and Pipelined on Artix 7 FPGA | 2025</strong><p>
<em>Technologies Used: VHDL, QuestaSim, TCL, Vivado, Manchester Encoding, EasyEDA, JLCPCB</em></p>
<ul>
  <li>Project Objective: Implement MSOE networking protocol in pure hardware - Deep pipelines.</li>
  <li>Implementation tested up to 2mbps with >98% accuracy.</li>
  <li>Implementation recognizes collisions mid transmission and knows to retransmit packets to directed device when network returns idle, successfully interacting over RJ45 switch.</li>
  <li>Features: CRC8, packet construction around message, 255 unique addresses, broadcasting address, and two UART communication ports for sending and reading network messages.</li>
  <li>The two UART boards that talk to the FPGA feature a CP2102 and use a USB type C connector; these were developed in EasyEDA and printed through JLCPCB.</li>
  <li>Developed TCL/Tk scripts for building project and running testbenches on new git clone.</li>
  <li>Eight-stage calibration pipeline on the Manchester decoder to handle 25% tolerance.</li>
  <li>Result: Successfully achieved interoperability with another implementation through switch.</li>
</ul>
</li>

<li><strong>Broadcast UDP Packets with Artix 7 FPGA through Homelab Network Switch | 2025</strong><p>
<em>Technologies Used: VHDL, Vivado, MII, UDP</em></p>
<ul>
  <li>Project Objective: Broadcast hardcoded UDP packets to contain message payloads.</li>
  <li>Designed and implemented a pure hardware solution for the Artix 7 FPGA that can transmit UDP packets over ethernet through the PHY via MII interface connected to the PL.</li>
  <li>UDP packets contain custom payloads any device in my home lab network can receive.</li>
  <li>Result: Completed – College Junior Year, plans to expand functionality further.</li>
</ul>
</li>

<li><strong>Inference of Quantized Neural Networks with Ultrascale+ FPGAs | 2024–2025</strong><p>
<em>Technologies Used: Python, Vivado, Vitis (HLS), GitLab, Pytorch, Tensorflow</em></p>
<ul>
  <li>Project Objective: Run quantized neural networks in parallel >150MHz on Ultrascale+.</li>
  <li>Designed and developed Pytorch & Tensorflow python programs to train sequential neural networks with ReLU activation to predict patterns for people with diabetes, sensor failure, and nonlinear abnormal trigonometry functions.</li>
  <li>Developed python scripts to extract weights and biases from trained networks.</li>
  <li>Developed python scripts to quantize exported weights and biases in 16/8/4bit, and ternary.</li>
  <li>Developed python scripts to write and save new VHDL hardware entities and packages for synthesizing hardware capable of inference – deep pipelining was utilized for timing.</li>
  <li>Result: &lt;1Watt for inference of 1000neurons – Expanding functionality.</li>
</ul>
</li>

<li><strong>Create my own Chatbot Server Stack | 2024–2025</strong><p>
<em>Technologies Used: Wireguard, Python (llama_cpp, HTTPServer, Flask), HTML, CSS, JS</em></p>
<ul>
  <li>Project Objective: Local hosted LLM accessible through webserver on VPN subnet.</li>
  <li>Local inference of a quantized 8billion parameter LLM using llama_cpp.</li>
  <li>I developed and deployed a frontend webpage hosted on my desktop that would send and receive responses generated by the LLM to the site.</li>
  <li>HTTP server on 10.0.0.2:5000 listens for incoming payload, processes JSON payload, responds with JSON message.</li>
  <li>Custom commands on frontend user input for clearing screen and providing help messages.</li>
  <li>Enter questions are sent to the Flask server on 10.0.0.2:5001, this is forwarded to the LLM.</li>
  <li>Result: From anywhere in the world, I can access my VPN server which gives me access to my locally hosted alliterated LLM.</li>
</ul>
</li>

<li><strong>FPGA Based Arbitrary Waveform Generator with Custom PCBs | 2023–2024</strong><p>
<em>Technologies Used: VHDL, Vivado, C, CubeIDE, SPI</em></p>
<ul>
  <li>Project Objective: FPGA – Parallel DAC Waveform generator.</li>
  <li>Designed and printed PCBs each with one parallel DAC and ADC with two SMA connectors.</li>
  <li>Parallel DACs connected to an Artix 7 FPGA development board, user toggles switches on the FPGA board to change the frequency of the output wave and the type.</li>
  <li>Waves implemented (square, sine, triangle, and sawtooth).</li>
  <li>Waveform fed into onboard ADC of an STM32F411 microcontroller, driven by interrupts.</li>
  <li>STM32 drives a LED dot matrix display to showcase the varying voltage levels of waveform.</li>
  <li>Result: Generated various waveforms through my custom PCBs, demo on perrynewlin.com.</li>
</ul>
</li>

<li><strong>Develop Website for Phasor Calculation & Testbenches Generation | 2023–2025</strong><p>
<em>Technologies Used: HTML, CSS, JS (chart.js, three.js)</em></p>
<ul>
  <li>Project Objective: Create a website for calculating phasors.</li>
  <li>Designed and created easytrig.com – a website that makes math operations pertaining to circuit analysis far easier to perform on mobile devices.</li>
  <li>Render outputs from OpenAI’s ChatGPT in markdown and convert to PDF.</li>
  <li>Add, subtract, multiply, and divide phasors with steps rendered in real-time.</li>
  <li>Render phasors as sinusoids with zooming and autozoom features.</li>
  <li>Plot imaginary numbers as vectors and have length calculated in real-time.</li>
  <li>Added tool to generate VHDL testbench boilerplate code based on entity ports.</li>
  <li>Result: Easytrig gets 1000+ monthly visits, bringing free and powerful tools to the masses.</li>
</ul>
</li>

<li><strong>Develop, Synthesize, and Implement soft ARMv4 Processor in VHDL | 2022</strong><p>
<em>Technologies Used: VHDL, Quartus, ModelSim</em></p>
<ul>
  <li>Project Objective: ARM processor on Intel DE10 FPGA development board.</li>
  <li>In Digital Logic II I implemented the ARMv4 ISA as a soft processor in VHDL on the DE10.</li>
  <li>Implemented w/ VHDL: instruction fetch, decode, execute, memory, and register writeback.</li>
  <li>Verified program execution, and writeback functionality with comprehensive testbenches.</li>
  <li>IROM compatible with the following assembly: MOV, LDR, STR, ADD, SUB, CMP, BEQ.</li>
  <li>Result: Executed a program to light up LEDs that utilized branches, arithmetic, and load/store.</li>
</ul>
</li>

<li><strong>Custom Handheld Microcontroller Game Console | 2020–2021</strong><p>
<em>Technologies Used: C, Arduino, I2C, UI design, FRAM, JTAG (AVR Programmer), PCB Design</em></p>
<ul>
  <li>Project Objective: Portable handheld game console using custom PCBs.</li>
  <li>Designed custom board using 32u4 microcontroller.</li>
  <li>Designed and programmed custom games rendered on a 128x32 I2C screen.</li>
  <li>Games which include object avoidance with built in difficulty increase as score increments.</li>
  <li>Designed custom FRAM logic to store user scores after console shutdown.</li>
  <li>Result: Could play custom made two-color games in a case &lt; 1” wide at more than 40 frames.</li>
</ul>
</li>

<li><strong>Accessibility OLED Watch to Display my Class Schedule | 2018</strong><p>
<em>Technologies Used: C, Arduino, I2C, UI design</em></p>
<ul>
  <li>Project Objective: Create a watch using a low powered MCU that displays my class schedule.</li>
  <li>Designed wristwatch with 16u4 development board, LiPo battery, & I2C OLED display.</li>
  <li>Designed U.I to display class schedule for which day of week it was.</li>
  <li>Displayed schedule could be cycled using a single push button input, debounced.</li>
  <li>Result: No longer had to remember a long schedule, just look at my custom watch!</li>
</ul>
</li>

<li><strong>Simple as Possible 1 Single Cycle Computer | 2015–2016</strong><p>
<em>Technologies Used: 74LS series ICs, EEPROMs, Oscilloscope, Function Generator</em></p>
<ul>
  <li>Project Objective: Build 8-bit SAP-1 Computer From Scratch.</li>
  <li>Used 74LS series logic chips and other DIP based chips to build an 8bit computer entirely on breadboards.</li>
  <li>After 7 months it was completed and was able to run the JMP command.</li>
  <li>After 8 months it could play the Fibonacci sequence all on its own.</li>
  <li>Features: 8-Bit instruction register, 4-bit program counter, 8-Bit accumulator and B-register.</li>
  <li>Inspired by Ben Eater.</li>
  <li>Result: Can perform a jump instruction and run a loaded program in the EEPROM.</li>
</ul>
</li>

</ul>






<h3>Relevant Coursework</h3>
<ul>
  <li><strong>Superscalar, Multicore, and Multiprocessor Architecture</strong><br>
    <em>Course Code: CPE 4510 — Milwaukee School of Engineering</em>
  </li>
  
  <li><strong>Advanced Embedded Systems</strong><br>
    <em>Course Code: CPE 3600 — Milwaukee School of Engineering</em>
  </li>

  <li><strong>Computer Architecture</strong><br>
    <em>Course Code: CE 1921 — Milwaukee School of Engineering</em>
  </li>

  <li><strong>Differential Equations</strong><br>
    <em>Course Code: MTH 2130 — Milwaukee School of Engineering</em>
  </li>

  <li><strong>Digital Logic I</strong><br>
    <em>Course Code: CE 1901 — Milwaukee School of Engineering</em>
  </li>

  <li><strong>Digital Logic II</strong><br>
    <em>Course Code: CE 1911 — Milwaukee School of Engineering</em>
  </li>

  <li><strong>Discrete Mathematics</strong><br>
    <em>Course Code: MTH 2310 — Milwaukee School of Engineering</em>
  </li>

  <li><strong>Embedded Systems</strong><br>
    <em>Course Code: CPE 2610 — Milwaukee School of Engineering</em>
  </li>

  <li><strong>Ethics for Managers & Engineers</strong><br>
    <em>Course Code: PHL 3101 — Milwaukee School of Engineering</em>
  </li>

  <li><strong>Physics II — Electromagnetism</strong><br>
    <em>Course Code: PH 2021 — Milwaukee School of Engineering</em>
  </li>

  <li><strong>Probability and Statistics</strong><br>
    <em>Course Code: MTH 2480 — Milwaukee School of Engineering</em>
  </li>

  <li><strong>Systems Programming</strong><br>
    <em>Course Code: CPE 2600 — Milwaukee School of Engineering</em>
  </li>

  <li><strong>Waves, Relativity, Thermodynamics</strong><br>
    <em>Course Code: PH 1980T — Milwaukee School of Engineering</em>
  </li>
</ul>






<h4>Gallery</h4>
<p>Interesting pictures I take during the creative process.</p>
<p>To prevent un-authorized use, a vast majority of the gallery is hidden (>500Pictures/Videos). Thank you for understanding.</p>

        
		<div class="gallery-grid">
          <figure class="media-container" data-type="video" data-src="img/fpga_dac_driver.mp4" data-alt="Project Screenshot 1" data-caption="FPGA DAC Driver & STM32 Oscilloscope">
            <div class="placeholder">Press to Load</div>
            <figcaption>FPGA DAC Driver & STM32 Oscilloscope</figcaption>
          </figure>

          <figure class="media-container" data-type="video" data-src="img/custom_rm69330_setup_perry_newlin.mp4" data-alt="Project Screenshot 2" data-caption="Custom RM69330 Driver Board (1.8V PSU, UART, Level Shifter)">
            <div class="placeholder">Press to Load</div>
            <figcaption>Custom RM69330 Driver Board (1.8V PSU, UART, Level Shifter)</figcaption>
          </figure>

          <figure class="media-container" data-type="image" data-src="img/mutator1.png" data-alt="Project Screenshot 3" data-caption="Mutator Setup UVC Lighting & Actuators">
            <div class="placeholder">Press to Load</div>
            <figcaption>Mutator Setup UVC Lighting & Actuators</figcaption>
          </figure>

          <figure class="media-container" data-type="video" data-src="img/mutator2.mp4" data-alt="Project Screenshot 4" data-caption="Mutator Soft X-Rays">
            <div class="placeholder">Press to Load</div>
            <figcaption>Mutator Soft X-Rays</figcaption>
          </figure>

          <figure class="media-container" data-type="image" data-src="img/PCB1.jpg" data-alt="Project Screenshot 5" data-caption="Early RM69330 PCB Level Shifter Attempt">
            <div class="placeholder">Press to Load</div>
            <figcaption>Early RM69330 PCB Level Shifter Attempt</figcaption>
          </figure>
        </div>
      </div>

<aside class="infobox">
<h3>PHN</h3>
<img 
  src="img/perry_newlin_headshot.webp" 
  alt="Perry Newlin Headshot" 
  width="300" 
  height="300" 
  style="object-fit: cover;"
>
<p>Software/Hardware Developer, Radioisotope Collector</p>
<a href="https://www.linkedin.com/in/perry-newlin/" target="_blank" rel="noopener">Connect on LinkedIn</a>
</aside>
</div>
</div>
<div id="blogList">
<h2>All Extras</h2>
<ul>
<li><a href="post_coming_soon.htm">My Journey into Computers in a Nutshell.</a></li>
<li><a href="post_coming_soon.htm">Bitcoin & Stocks?</a></li>
<li><a href="post_coming_soon.htm">Philisophy and Ethics - a Suprisingly Fun Class.</a></li>
<li><a href="post_coming_soon.htm">'AI' is insane and no one seems to care.</a></li>
<li><a href="post_coming_soon.htm">The age of bloatware makes me sad.</a></li>
</ul>
</div>
</main>
<footer>
<p>&copy; 2025 Perry Newlin. All rights reserved.</p>
</footer>
<script>
var homeLink = document.getElementById("homeLink");
var blogLink = document.getElementById("blogLink");
var portfolioPage = document.getElementById("portfolioPage");
var blogList = document.getElementById("blogList");

homeLink.addEventListener("click", function(e) {
  e.preventDefault();
  portfolioPage.style.display = "block";
  blogList.style.display = "none";
});

blogLink.addEventListener("click", function(e) {
  e.preventDefault();
  portfolioPage.style.display = "none";
  blogList.style.display = "block";
});

document.addEventListener("DOMContentLoaded", function() {
  var mediaContainers = document.querySelectorAll(".media-container");
  mediaContainers.forEach(function(container) {
    container.addEventListener("click", function() {
      var placeholder = container.querySelector(".placeholder");
      if (!placeholder) return;

      var mediaType = container.getAttribute("data-type");
      var src = container.getAttribute("data-src");
      var alt = container.getAttribute("data-alt");
      var figcaption = container.querySelector("figcaption");
      var caption = container.getAttribute("data-caption") || "";

      if (mediaType === "image") {
        var img = document.createElement("img");
        img.src = src;
        img.alt = alt;
        img.style.width = "100%";
        container.insertBefore(img, figcaption);
      } else if (mediaType === "video") {
        var video = document.createElement("video");
        video.src = src;
        video.alt = alt;
        video.controls = true;
        video.style.width = "100%";
        container.insertBefore(video, figcaption);
      }

      figcaption.textContent = caption;
      placeholder.remove();
    });
  });
});
</script>
</body>
</html>
